services:
  app:
    build: .
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      postgre_product_master:
        condition: service_healthy
      redis_product_master:
        condition: service_healthy

  redis_product_master:
    image: redis:alpine3.16
    container_name: redis_product_master
    command: redis-server --save 60 1 --loglevel warning --requirepass 1234
    ports:
      - "6379:6379"
    networks:
      - networks_product_master
    volumes:
      - redis_product_master:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "1234", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  postgre_product_master:
    image: postgres:15.4
    container_name: pg_product_master
    hostname: postgres
    env_file: .env
    ports:
      - 5432:5432
    volumes:
      - postgre_product_master:/var/lib/postgresql/data
    networks:
      - networks_product_master
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgre_product_master: {}
  redis_product_master: {}

networks:
  networks_product_master: {}
